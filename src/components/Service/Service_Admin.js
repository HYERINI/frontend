import { React, useState } from 'react';
import { useNavigate } from 'react-router-dom';
import './Service.css';
import Title from './../Title/Title';
import ServiceBtn from './Service_Button';
import axios from 'axios';
import $ from 'jquery';

function Service_Admin(){
    const [message, setMessage] = useState('');

    const handleMessageChange = event => {
        // üëáÔ∏è access textarea value
        setMessage(event.target.value);
    };
    const [selectSecondCategory, setSelectSecondCategory] = useState('');
    const [selectThirdCategory, setSelectThirdCategory] = useState('');

    const ApplyService = (e) => {
        if(localStorage.getItem('firstCategory') == 'ÍµêÏú°'){
            axios({
                method: "post",
                url: "http://54.180.210.232/api/v1/services/education",
                headers: {
                    "Content-Type": "application/json",
                    Authorization: "Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJleGFtcGxlQGV4YW1wbGUuY29tIiwiYXV0aCI6IlJPTEVfTEVWRUwyIiwiZXhwIjoxNjc0OTc4OTQ2fQ.gRXoxRVVFkXpuHCTT4SuggejFwtetn8d5yY4CYSkfbc"
                },data: {
                    "content": message,
                    "degreeRequest": selectSecondCategory,
                    "educationContentRequest": selectThirdCategory,
                    "userFileUrl": "https://picsum.photos/seed/picsum/200/300"
                }
            }).then((res) => {
                alert('ÏÑúÎπÑÏä§ Ïã†Ï≤≠Ïù¥ ÏôÑÎ£åÎêòÏóàÏäµÎãàÎã§');
                $('.Service_Top_Wrap').append("<div><img src='./../'</div>");
            }).catch((error) => {
                alert("Ïñ¥Ï©åÏßÄÏù¥... ? Ïïà Îú®ÎäîÎç∞Ïóê..");
            });
        }
    }

    const [keyword, setKeyword] = useState('ÌïôÏúÑ');
    const [secondKeyword, setSecondKeyword] = useState('ÏÑúÎπÑÏä§ ÎÇ¥Ïö©');
    const [isCategorySelect, setIsCategorySelect] = useState(true);
    const [isEducationSelect, setIsEducationSelect] = useState(true);
    const [isEducationDetailSelect, setIsEducationDetailSelect] = useState(true);
    const [isHouseSelect, setIsHouseSelect] = useState(true);
    const categoryArr = ['ÍµêÏú°', 'ÏÉùÌôú'];
    const houseArr = ['ÏõêÎ£∏', 'Ìà¨Î£∏', 'Ìà¨Î≤†Ïù¥'];
    const [educationArr, setEducationArr] = useState(['Î∞ïÏÇ¨', 'ÏÑùÏÇ¨']);
    const [educationDetailArr, setIsEducationDetailArr] = useState(['Ïª®ÏÑ§ÌåÖ', 'ÍµêÏ†ïÍµêÏó¥', 'Î≤àÏó≠']);

    const houseCategoryClick = (idx) => {
        const newHouseArr = Array(houseArr.length).fill(false);
        newHouseArr[idx] = true;
        setIsHouseSelect(newHouseArr);
    }

    const categoryClick = (idx) => {
        const newCategoryArr = Array(categoryArr.length).fill(false);
        newCategoryArr[idx] = true;
        setIsCategorySelect(newCategoryArr);
        newCategoryArr.map(function() {
            if(newCategoryArr[0]){
                setKeyword('ÌïôÏúÑ');
                localStorage.setItem('firstCategory', 'ÍµêÏú°');
                setEducationArr(['Î∞ïÏÇ¨', 'ÏÑùÏÇ¨']);
                setSecondKeyword('ÏÑúÎπÑÏä§ ÎÇ¥Ïö©');
                setIsEducationDetailArr(['Ïª®ÏÑ§ÌåÖ', 'ÍµêÏ†ïÍµêÏó¥', 'Î≤àÏó≠']);
            }else{
                setKeyword('ÏÉùÌôú');
                localStorage.setItem('firstCategory', 'ÏÉùÌôú');
                setEducationArr(['ÍµêÌÜµ', 'ÌÜµÏã†', 'Ï£ºÍ±∞']);
                setIsEducationDetailArr(['ÏÜåÌòï', 'Ï§ëÌòï', 'SUV']);
            }
        });
    }

    const educationCategoryClick = (idx) => {
        const newEducationArr = Array(educationArr.length).fill(false);
        newEducationArr[idx] = true;
        setIsEducationSelect(newEducationArr);
        localStorage.setItem('secondCategory', educationArr[idx]);
        if(localStorage.getItem('secondCategory') == 'Î∞ïÏÇ¨'){
            setSelectSecondCategory('MASTER');
        }else{
            setSelectSecondCategory('DOCTOR');
        }
        if(keyword == 'ÍµêÏú°'){
            setSecondKeyword('ÏÑúÎπÑÏä§ ÎÇ¥Ïö©');
        }
        if(keyword == 'ÏÉùÌôú'){
            if(newEducationArr[0]){
                setSecondKeyword('Ï§ëÍ≥†Ï∞®');
            }else if(newEducationArr[1]){
                setSecondKeyword('Î™®Îç∏Î™Ö ÏûÖÎ†•');
            }else{
                setSecondKeyword('Îß§Îß§');
            }
        }
    }

    const educationDetailCategoryClick = (idx) => {
        const newEducationDetailArr = Array(educationDetailArr.length).fill(false);
        newEducationDetailArr[idx] = true;
        setIsEducationDetailSelect(newEducationDetailArr);
        localStorage.setItem('thirdCategory', educationDetailArr[idx]);
        if(localStorage.getItem('thirdCategory') == 'Ïª®ÏÑ§ÌåÖ'){
            setSelectThirdCategory('CONSULTING');
        }else if(localStorage.getItem('thirdCategory') == 'ÍµêÏ†ïÍµêÏó¥'){
            setSelectThirdCategory('CORRECTION');
        }else{
            setSelectThirdCategory('TRANSLATION');
        }
    }

    return (
        <div className="Service_Top_Wrap">
            <div className="ServiceWrap">
                <Title title="ÏÑúÎπÑÏä§ Ïã†Ï≤≠" />
                <h3 id="categoryTitle">Ïπ¥ÌÖåÍ≥†Î¶¨</h3>
                <div className="categoryBtnWrap">
                    {categoryArr.map((elm, index) => {
                        return (
                            <ServiceBtn
                                isSelected={isCategorySelect[index]}
                                handleClick={categoryClick}
                                elementIndex={index}
                                content={elm}
                            />
                        );
                    })}
                </div>
                <div className="categoryBox">
                    <h3>{ keyword }</h3>
                    <div className="categorySpecialBox">
                        <div className="secondCategoryBtnWrap">
                            {educationArr.map((elm, index) => {
                                return(
                                    <ServiceBtn
                                        key={index}
                                        isSelected={isEducationSelect[index]}
                                        handleClick={educationCategoryClick}
                                        elementIndex={index}
                                        content={elm}
                                    />
                                );
                            })}
                        </div>
                        <div className="categoryBox">
                            <h3>{ secondKeyword }</h3>
                            <div>{secondKeyword == 'Ï§ëÍ≥†Ï∞®' ?
                                <div className="lastCategoryBoxWrap">
                                    <div className="lastCategoryBox">
                                        {educationDetailArr.map((elm, index) => {
                                            return(
                                                <ServiceBtn
                                                    key={index}
                                                    isSelected={isEducationDetailSelect[index]}
                                                    handleClick={educationDetailCategoryClick}
                                                    elementIndex={index}
                                                    content={elm}
                                                />)})}
                                    </div>
                                    <h3 id="categoryTitle">Í∞ÄÍ≤©</h3>
                                    <div className="carPriceCategoryWrap">
                                        <input type="text"/>
                                        <p>~</p>
                                        <input type="text"/>
                                    </div>
                                </div> : (secondKeyword == 'Î™®Îç∏Î™Ö ÏûÖÎ†•' ?
                                    <div>
                                        <div className="secondCategoryBtnWrap">
                                            {educationDetailArr.map((elm, index) => {
                                                return(
                                                    <ServiceBtn
                                                        key={index}
                                                        isSelected={isEducationDetailSelect[index]}
                                                        handleClick={educationDetailCategoryClick}
                                                        elementIndex={index}
                                                        content={elm}
                                                    />)})}
                                        </div>
                                        <div>
                                            <h3 id="categoryTitle">Ïú†Ïã¨Ïπ© Ïó¨Î∂Ä</h3>
                                            <button type="button" id="usimOk">O</button>
                                            <button type="button" id="usimNo">X</button>
                                        </div></div>:
                                    <div className="lastCategoryBoxWrap">
                                        <div className="lastCategoryBox">
                                            {educationDetailArr.map((elm, index) => {
                                                return(
                                                    <ServiceBtn
                                                        key={index}
                                                        isSelected={isEducationDetailSelect[index]}
                                                        handleClick={educationDetailCategoryClick}
                                                        elementIndex={index}
                                                        content={elm}
                                                    />)})}
                                        </div>
                                        <h3 id="categoryTitle">Îß§Îß§</h3>
                                        <div className="lastCategoryBox">
                                            {houseArr.map((elm, index) => {
                                                return (
                                                    <ServiceBtn
                                                        isSelected={isHouseSelect[index]}
                                                        handleClick={houseCategoryClick}
                                                        elementIndex={index}
                                                        content={elm}
                                                    />
                                                );
                                            })}
                                        </div>
                                    </div>)
                            }</div>
                        </div>
                    </div>
                </div>
                <div className="categoryBox">
                    <h3>Ï∂îÍ∞Ä ÏöîÏ≤≠ ÏÇ¨Ìï≠</h3>
                    <textarea
                        id="message"
                        name="message"
                        value={message}
                        onChange={handleMessageChange}
                    />
                </div>
            </div>
            <div className="admin_btn_wrap" onClick={ApplyService}>
                <div className="admin_bt">ÏäπÏù∏</div>
                <div className="deny_bt">Í±∞Ï†à</div>
            </div>
        </div>
    );
}

export default Service_Admin;
